#!/bin/sh
Name='<b>perl-Context-Preserve</b>'
Comment='<span size="xx-large">Run code after a subroutine call, preserving context</span>'
Comment3='
Sometimes you need to call a function, get the results, act on the
results, then return the result of the function. This is painful because
of contexts; the original function can behave different if its called
in void, scalar, or list context. You can ignore the various cases and
just pick one, but thats fragile. To do things right, you need to see
which case youre being called in, and then call the function in that
context. This results in 3 code paths, which is a pain to type in (and
maintain).  This module automates the process. You provide a coderef that
is the "original function", and another coderef to run after the
original runs. You can modify the return value (aliased to @_) here, and
'
License='GPL+ or Artistic'
Screenshot=''
Url='http://search.cpan.org/dist/Context-Preserve'
export Comment
export Name
export Comment3
export License
export Screenshot
export Url
