#!/bin/sh
Name='<b>perl-Eval-Closure</b>'
Comment='<span size="xx-large">Safely and cleanly create closures via string eval</span>'
Comment3='
String eval is often used for dynamic code generation. For instance, Moose uses
it heavily, to generate inlined versions of accessors and constructors, which
speeds code up at runtime by a significant amount. String eval is not without
its issues however - its difficult to control the scope its used in (which
determines which variables are in scope inside the eval), and its easy to miss
compilation errors, since eval catches them and sticks them in $@ instead.

This module attempts to solve these problems. It provides an eval_closure
function, which evals a string in a clean environment, other than a fixed list
of specified variables. Compilation errors are rethrown automatically.
'
License='GPL+ or Artistic'
Screenshot=''
Url='http://search.cpan.org/dist/Eval-Closure/'
export Comment
export Name
export Comment3
export License
export Screenshot
export Url
