#!/bin/sh
Name='<b>perl-MooseX-Role-Parameterized</b>'
Comment='<span size="xx-large">Make your roles flexible through parameterization</span>'
Comment3='
Roles are composable units of behavior. They are useful for factoring out
functionality common to many classes from any part of your class hierarchy.
(See MooseCookbookRolesRecipe1 for an introduction to MooseRole.)

While combining roles affords you a great deal of flexibility, individual
roles have very little in the way of configurability. Core Moose provides
alias for renaming methods to avoid conflicts, and excludes for ignoring
methods you dont want or need (see MooseCookbookRolesRecipe2 for more
about alias and excludes).
'
License='GPL+ or Artistic'
Screenshot=''
Url='http://search.cpan.org/dist/MooseX-Role-Parameterized'
export Comment
export Name
export Comment3
export License
export Screenshot
export Url
